#!/bin/sh
#
# chkconfig: 2345 21 79
# description: Zookeeper service (for Kafka)
#

### BEGIN INIT INFO
# Provides: zookeeper
### END INIT INFO

SERVICE_NAME=zookeeper
SERVICE_CMD="/root/{{ kafka_pkg }}/bin/zookeeper-server-start.sh /root/{{ kafka_pkg }}/config/zookeeper.properties"
WAIT_CMD="/root/{{ kafka_pkg }}/bin/zookeeper-shell.sh localhost:2181 get / "
DEL_CMD="/root/{{ kafka_pkg }}/bin/zookeeper-shell.sh localhost:2181 delete /controller"
SERVICE_OUT=/var/log/zookeeper/zookeeper-output
PID=$(ps aux | grep kafka.*zookeeper.properties | grep -v grep | awk '{print $2}')

case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ -z $PID ]; then
            nohup $SERVICE_CMD 2>>1 >>$SERVICE_OUT &
            $WAIT_CMD
            while [ "$?" != "0" ]; do
                sleep 1
   	        echo "Waiting for zookeeper to be ready..."
 		$WAIT_CMD
	    done
            $DEL_CMD
            echo "$SERVICE_NAME started ..."
       else
            echo "$SERVICE_NAME is already running ..."
       fi
    ;;
    stop)
        if [ ! -z $PID ]; then
            echo "$SERVICE_NAME stoping ..."
            kill $PID
            echo "$SERVICE_NAME stopped ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    restart)
        if [ ! -z $PID ]; then
            echo "$SERVICE_NAME stopping ...";
            kill $PID
            echo "$SERVICE_NAME stopped ...";
        fi
        echo "$SERVICE_NAME starting ..."
        nohup $SERVICE_CMD 2>>1 >>$SERVICE_OUT &
        echo "$SERVICE_NAME started ..."
    ;;
    status)
        if [ ! -z $PID ]; then
            echo "$SERVICE_NAME is running (PID $PID)"
            exit 0
        else
            echo "$SERVICE_NAME is not running"
            exit 3
        fi
    ;;
esac 
